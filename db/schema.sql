DROP DATABASE IF EXISTS overview;


CREATE DATABASE overview;
\c overview;


-- PRODUCTS --

CREATE TABLE products (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  name VARCHAR(30) NOT NULL,
  slogan VARCHAR(150) NOT NULL,
  description VARCHAR(500) NOT NULL,
  category VARCHAR(30) NOT NULL,
  default_price DECIMAL(10, 2) NOT NULL,
  PRIMARY KEY (id)
);


-- FEATURES --

CREATE TABLE features (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  product_id INTEGER NOT NULL,
  feature VARCHAR(30) NOT NULL,
  value VARCHAR(30) NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (product_id)
    REFERENCES products (id)
);


-- STYLES --

CREATE TYPE default_style AS ENUM ('0', '1');

CREATE TABLE styles (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  product_id INTEGER NOT NULL,
  name VARCHAR(30) NOT NULL,
  sale_price DECIMAL(12, 2) NULL DEFAULT NULL,
  original_price DECIMAL(12, 2) NOT NULL,
  default_style default_style,
  PRIMARY KEY (id),
  FOREIGN KEY (product_id)
    REFERENCES products (id)
);


-- PHOTOS --

CREATE TABLE photos (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  style_id INTEGER NOT NULL,
  thumbnail_url VARCHAR(200) NOT NULL,
  url VARCHAR(200) NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (style_id)
    REFERENCES styles (id)
);


-- SKUS --

CREATE TABLE skus (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  style_id INTEGER NOT NULL,
  size VARCHAR(10) NOT NULL,
  quantity INTEGER NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (style_id)
    REFERENCES styles (id)
);


-- RELATED --

CREATE TABLE related (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY UNIQUE,
  product_id INTEGER NOT NULL,
  related_id INTEGER NOT NULL,
  PRIMARY KEY (id),
  FOREIGN KEY (product_id)
    REFERENCES products (id)
);
